{
	"name": "tiler",
	"node_position": {
		"x": 0,
		"y": 0
	},
	"parameters": {
		"fixed_offset": 0,
		"inputs": 0,
		"offset": 0.25,
		"overlap": 2,
		"rotate": 45,
		"scale": 0.2,
		"scale_x": 0.5,
		"scale_y": 0.5,
		"tx": 4,
		"ty": 4,
		"value": 1,
		"variations": false
	},
	"seed_int": 0,
	"shader_model": {
		"code": [
			"vec3 $(name_uv)_instance_uv = vec3(0.0);",
			"vec4 $(name_uv)_rch = tiler_$(name)($uv, vec2($tx, $ty), int($overlap), $(name_uv)_instance_uv, vec2(float($seed)));"
		],
		"global": "",
		"includes": [
			"custom_uv"
		],
		"inputs": [
			{
				"default": "0.0",
				"function": true,
				"label": "",
				"longdesc": "The input image or atlas of 4 or 16 input images",
				"name": "in",
				"shortdesc": "Input",
				"type": "f"
			},
			{
				"default": "1.0",
				"function": true,
				"label": "",
				"longdesc": "The mask applied to the pattern",
				"name": "mask",
				"shortdesc": "Mask",
				"type": "f"
			}
		],
		"instance": [
			"vec4 tiler_$(name)(vec2 uv, vec2 tile, int overlap, inout vec3 instance_uv, vec2 _seed) {",
			"\tfloat c = 0.0;",
			"\tvec3 rc = vec3(0.0);",
			"\tvec3 rc1;",
			"\tfor (int dx = -overlap; dx <= overlap; ++dx) {",
			"\t\tfor (int dy = -overlap; dy <= overlap; ++dy) {",
			"\t\t\tvec2 pos = uv*tile+vec2(float(dx), float(dy)); pos = fract((floor(mod(pos, tile))+vec2(0.5))/tile)-vec2(0.5);",
			"\t\t\tvec2 seed = rand2(pos+_seed);",
			"\t\t\trc1 = rand3(seed);",
			"\t\t\tpos = fract(pos+vec2($fixed_offset/tile.x, 0.0)*floor(mod(pos.y*tile.y, 2.0))+$offset*seed/tile);",
			"\t\t\tfloat mask = $mask(fract(pos+vec2(0.5)));",
			"\t\t\tif (mask > 0.01) {",
			"\t\t\t\tvec2 pv = fract(uv - pos)-vec2(0.5);",
			"\t\t\t\tseed = rand2(seed);",
			"\t\t\t\tfloat angle = (seed.x * 2.0 - 1.0) * $rotate * 0.01745329251;",
			"\t\t\t\tfloat ca = cos(angle);",
			"\t\t\t\tfloat sa = sin(angle);",
			"\t\t\t\tpv = vec2(ca*pv.x+sa*pv.y, -sa*pv.x+ca*pv.y);",
			"\t\t\t\tpv *= (seed.y-0.5)*2.0*$scale+1.0;",
			"\t\t\t\tpv /= vec2($scale_x, $scale_y);",
			"\t\t\t\tpv += vec2(0.5);",
			"\t\t\t\tseed = rand2(seed);",
			"\t\t\t\tvec2 clamped_pv = clamp(pv, vec2(0.0), vec2(1.0));",
			"\t\t\t\tif (pv.x != clamped_pv.x || pv.y != clamped_pv.y) {",
			"\t\t\t\t\tcontinue;",
			"\t\t\t\t}",
			"\t\t\t\tvec2 full_uv = pv;",
			"\t\t\t\tpv = get_from_tileset($inputs, seed.x, pv);",
			"\t\t\t\tfloat c1 = $in.variation(pv, $variations ? seed.x : 0.0)*mask*(1.0-$value*seed.x);",
			"\t\t\t\tc = max(c, c1);",
			"\t\t\t\trc = mix(rc, rc1, step(c, c1));",
			"\t\t\t\tinstance_uv = mix(instance_uv, vec3(full_uv, seed.x), step(c, c1));",
			"\t\t\t}",
			"\t\t}",
			"\t}",
			"\treturn vec4(rc, c);",
			"}"
		],
		"longdesc": "Tiles several occurences of an input image while adding randomness.",
		"name": "Tiler",
		"outputs": [
			{
				"f": "$(name_uv)_rch.a",
				"longdesc": "Shows the generated pattern",
				"shortdesc": "Output",
				"type": "f"
			},
			{
				"longdesc": "Shows a random color for each instance of the input image",
				"rgb": "$(name_uv)_rch.rgb",
				"shortdesc": "Instance map",
				"type": "rgb"
			},
			{
				"longdesc": "Per instance UVs. Can be used with Custom UV node.",
				"rgb": "$(name_uv)_instance_uv",
				"shortdesc": "Instance UV",
				"type": "rgb"
			}
		],
		"parameters": [
			{
				"control": "None",
				"default": 4,
				"label": "Tile X",
				"longdesc": "The number of columns of the tiles pattern",
				"max": 64,
				"min": 1,
				"name": "tx",
				"shortdesc": "Tile.x",
				"step": 1,
				"type": "float"
			},
			{
				"control": "None",
				"default": 4,
				"label": "Tile Y",
				"longdesc": "The number of rows of the tiles pattern",
				"max": 64,
				"min": 1,
				"name": "ty",
				"shortdesc": "Tile.y",
				"step": 1,
				"type": "float"
			},
			{
				"control": "None",
				"default": 1,
				"label": "Overlap",
				"longdesc": "The number of neighbour tiles an instance of the input image can overlap. Set this parameter to the lowest value that generates the expected result (where all instances are fully visible) to improve performance.",
				"max": 5,
				"min": 0,
				"name": "overlap",
				"shortdesc": "Overlap",
				"step": 1,
				"type": "float"
			},
			{
				"default": 0,
				"label": "Inputs",
				"longdesc": "The input type of the node:\n- 1: single image\n- 4: atlas of 4 images\n- 16: atlas of 16 images\nAtlases can be created using the Tile2x2 node.",
				"name": "inputs",
				"shortdesc": "Input",
				"type": "enum",
				"values": [
					{
						"name": "1",
						"value": " 1.0"
					},
					{
						"name": "4",
						"value": "2.0"
					},
					{
						"name": "16",
						"value": "4.0"
					}
				]
			},
			{
				"control": "None",
				"default": 1,
				"label": "Scale X",
				"longdesc": "The scale of input images on the X axis",
				"max": 2,
				"min": 0,
				"name": "scale_x",
				"shortdesc": "Scale.x",
				"step": 0.01,
				"type": "float"
			},
			{
				"control": "None",
				"default": 1,
				"label": "Scale Y",
				"longdesc": "The scale of input images on the Y axis",
				"max": 2,
				"min": 0,
				"name": "scale_y",
				"shortdesc": "Scale.y",
				"step": 0.01,
				"type": "float"
			},
			{
				"control": "None",
				"default": 0.5,
				"label": "Fixed Offset",
				"longdesc": "The relative offset of odd rows",
				"max": 1,
				"min": 0,
				"name": "fixed_offset",
				"shortdesc": "FixedOffset",
				"step": 0.01,
				"type": "float"
			},
			{
				"control": "None",
				"default": 0.5,
				"label": "Rnd Offset",
				"max": 1,
				"min": 0,
				"name": "offset",
				"step": 0.01,
				"type": "float"
			},
			{
				"control": "None",
				"default": 0,
				"label": "Rnd Rotate",
				"longdesc": "The random rotation applied to each image instance",
				"max": 180,
				"min": 0,
				"name": "rotate",
				"shortdesc": "RndRotate",
				"step": 0.1,
				"type": "float"
			},
			{
				"control": "None",
				"default": 0,
				"label": "Rnd Scale",
				"longdesc": "The random scale applied to each image instance",
				"max": 1,
				"min": 0,
				"name": "scale",
				"shortdesc": "RndScale",
				"step": 0.01,
				"type": "float"
			},
			{
				"control": "None",
				"default": 0.5,
				"label": "Rnd Value",
				"longdesc": "The random grayscale value applied to each image instance",
				"max": 1,
				"min": 0,
				"name": "value",
				"shortdesc": "RndValue",
				"step": 0.01,
				"type": "float"
			},
			{
				"default": false,
				"label": "Variations",
				"longdesc": "Check to tile variations of the input",
				"name": "variations",
				"shortdesc": "Variations",
				"type": "boolean"
			}
		],
		"shortdesc": "Tiler"
	},
	"type": "shader"
}